// Mocks generated by Mockito 5.4.3 from annotations
// in urlpocket/test/provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:urlpocket/client/url_api.dart' as _i2;
import 'package:urlpocket/interactor/url_interactor.dart' as _i4;
import 'package:urlpocket/interactor/url_shrink_result.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUrlApi_0 extends _i1.SmartFake implements _i2.UrlApi {
  _FakeUrlApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUrlShrinkResult_1 extends _i1.SmartFake
    implements _i3.UrlShrinkResult {
  _FakeUrlShrinkResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UrlInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlInteractor extends _i1.Mock implements _i4.UrlInteractor {
  MockUrlInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UrlApi get urlApi => (super.noSuchMethod(
        Invocation.getter(#urlApi),
        returnValue: _FakeUrlApi_0(
          this,
          Invocation.getter(#urlApi),
        ),
      ) as _i2.UrlApi);

  @override
  _i5.Future<_i3.UrlShrinkResult> shrinkUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #shrinkUrl,
          [url],
        ),
        returnValue:
            _i5.Future<_i3.UrlShrinkResult>.value(_FakeUrlShrinkResult_1(
          this,
          Invocation.method(
            #shrinkUrl,
            [url],
          ),
        )),
      ) as _i5.Future<_i3.UrlShrinkResult>);
}
